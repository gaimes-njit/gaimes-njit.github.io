import { Block, BlockType } from './models/index';
import BigNumber from 'bignumber.js';
import { Position } from './models/position';
/**
 * Grid represents the placement of the blocks
 */
export type Grid = number[][];
/**
 * Width of the grid
 */
export declare const GRID_WIDTH = 20;
/**
 * Height of the grid
 */
export declare const GRID_HEIGHT = 16;
/**
 * Function prefix for `ab_drop` function calls
 */
export declare const FUNCTION_PREFIX = "ab_drop(";
/**
 * Width of the one cell of a grid in Unity
 */
export declare const ONE_CELL_WIDTH_IN_UNITY: BigNumber;
/**
 * Level width in Unity
 */
export declare const LEVEL_WIDTH_IN_UNITY: BigNumber;
/**
 * Structure starting position in Unity
 */
export declare const STRUCTURE_STARTING_POSITION: Position;
/**
 * This function is used to get the left most block from the array of blocks
 * @param blocks array of blocks to get the left most block from
 * @returns the left most block
 */
export declare function getLeftMostBlock(blocks: Array<Block>): Block;
/**
 * This function is used to get the right most block from the array of blocks
 * @param blocks array of blocks to get the right most block from
 * @returns the right most block
 */
export declare function getRightMostBlock(blocks: Array<Block>): Block;
/**
 * This function is used to get the top most block from the array of blocks
 * @param blocks array of blocks to get the top most block from
 * @returns the top most block
 */
export declare function getHighestBlock(blocks: Array<Block>): Block;
/**
 * This function is used to shift blocks to the left most position on the grid
 * @param blocks array of blocks to shift to the left most position

* @param grid grid represents the placement of the blocks
 * @returns an array of blocks shifted to the left most position and the updated grid
 */
export declare function shiftBlocksOnGrid(blocks: Array<Block>, grid: Grid): [Array<Block>, Grid];
/**
 * This function is used to get the blocks with their positions on the grid
 * @param functionsString string of `ab_drop()` functions
 * @returns an array of `Block`'s blocks with their positions on the grid
 */
export declare function getBlocksWithPosition(functionsString: string): [Array<Block>, Grid];
/**
 * This function is used to get the block position on the grid
 * @param blockType block type
 * @param slotPosition slot position
 * @param grid grid represents the placement of the blocks
 * @returns
 */
export declare function getBlockPositionOnGrid(blockType: BlockType, slotPosition: number, grid: Grid): {
    x: number;
    y: number;
};
/**
 * This function is used to get the width of the grid part that contains blocks
 * @param grid grid represents the placement of the blocks
 * @returns the width of the grid part that contains blocks
 */
export declare function getGridContentWidth(grid: Grid): BigNumber;
/**
 * This function is used to get the height of the grid part that contains blocks
 * @param grid grid represents the placement of the blocks
 * @returns the height of the grid part that contains blocks
 */
export declare function getGridContentHeight(grid: Grid): BigNumber;
/**
 * This function is used to initialize the grid with the given width and height with 0
 * @param width width of the grid
 * @param height height of the grid
 * @returns a grid with the given width and height initialized with 0
 */
export declare function initializeGrid(width: number, height: number): Grid;
/**
 * This function is used to print the grid
 * @param grid grid represents the placement of the blocks
 * @returns a string representation of the grid
 */
export declare function printGrid(grid: Grid): string;
