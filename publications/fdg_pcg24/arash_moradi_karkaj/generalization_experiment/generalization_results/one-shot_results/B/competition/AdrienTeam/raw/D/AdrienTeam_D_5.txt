It seems that generating the structure resembling "D" requires constructing the shape from the bottom layer (layer 0) to the top layer (layer 15) using the provided `ab_drop()` function and adhering to the given constraints. We can start by dropping the blocks in the appropriate order and position to create the desired shape.

Here is a possible solution to generate the "D" structure:

```python
# Map Initialization
structure = [[' ']*20 for _ in range(16)]

# Dropping blocks to form the "D" structure
ab_drop('b13', 9)
ab_drop('b13', 8)
ab_drop('b13', 7)
ab_drop('b13', 6)
ab_drop('b13', 5)
ab_drop('b13', 4)
ab_drop('b13', 3)
ab_drop('b13', 2)
ab_drop('b13', 1)
ab_drop('b13', 0)
ab_drop('b31', 0)
ab_drop('b31', 1)
ab_drop('b31', 2)
ab_drop('b31', 3)
ab_drop('b31', 4)
ab_drop('b31', 5)
ab_drop('b31', 6)
ab_drop('b31', 7)
ab_drop('b31', 8)
ab_drop('b31', 9)
ab_drop('b31', 10)
ab_drop('b31', 11)
ab_drop('b31', 12)
ab_drop('b31', 13)
ab_drop('b31', 14)
ab_drop('b31', 15)
ab_drop('b31', 16)
ab_drop('b31', 17)
ab_drop('b31', 18)
ab_drop('b31', 19)
ab_drop('b11', 6)
ab_drop('b11', 13)
ab_drop('b11', 14)
ab_drop('b11', 15)
ab_drop('b11', 16)
ab_drop('b11', 17)

# Printing the structure
for row in structure:
    print(' '.join(row))
```

This solution should generate a structure resembling the letter "D" while satisfying all the specified constraints. Feel free to test it and adjust the x and y coordinates in the `ab_drop()` calls if needed.