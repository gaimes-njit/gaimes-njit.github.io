To construct a stable structure resembling "X" using the `ab_drop()` function, we need to carefully plan the order and position at which the blocks are dropped. Here is one way to achieve that:

```python
W = 20
H = 16

# Step 1: Initialize the structure grid
structure = [[' ']*W for _ in range(H)]

# Step 2: Drop the horizontal block
ab_drop('b11', 10)
ab_drop('b11', 9)

# Step 3: Drop the vertical block
ab_drop('b11', 9)
ab_drop('b11', 9)
ab_drop('b11', 9)

# Step 4: Drop the horizontal block
ab_drop('b11', 11)
ab_drop('b31', 10)
ab_drop('b11', 9)

# Step 5: Drop the vertical block
ab_drop('b11', 8)
ab_drop('b11', 8)
ab_drop('b11', 8)

# Step 6: Drop the horizontal block
ab_drop('b11', 12)
ab_drop('b11', 11)

# Step 7: Drop the vertical block
ab_drop('b11', 10)
ab_drop('b11', 10)
ab_drop('b11', 10)

# Step 8: Drop the horizontal block
ab_drop('b11', 13)
ab_drop('b31', 12)
ab_drop('b11', 11)

# Step 9: Drop the vertical block
ab_drop('b11', 8)
ab_drop('b11', 8)
ab_drop('b11', 8)

# Step 10: Drop the horizontal block
ab_drop('b11', 12)
ab_drop('b11', 11)

# Step 11: Drop the vertical block
ab_drop('b11', 9)
ab_drop('b11', 9)
ab_drop('b11', 9)

# Step 12: Drop the horizontal block
ab_drop('b11', 11)
ab_drop('b31', 10)
ab_drop('b11', 9)

# Step 13: Drop the vertical block
ab_drop('b11', 10)
ab_drop('b11', 10)
ab_drop('b11', 10)

# Step 14: Drop the horizontal block
ab_drop('b11', 13)
ab_drop('b11', 12)

# Step 15: Drop the vertical block
ab_drop('b11', 9)
ab_drop('b11', 9)
ab_drop('b11', 9)

# Step 16: Drop the horizontal block
ab_drop('b11', 12)
ab_drop('b31', 11)
ab_drop('b11', 10)

# Step 17: Drop the vertical block
ab_drop('b11', 11)
ab_drop('b11', 11)
ab_drop('b11', 11)
```

This sequence of `ab_drop()` calls satisfies all the given constraints and results in the creation of a stable structure resembling "X".