To generate a stable structure resembling the character "R" while meeting the hard constraints, we can follow these steps:

Step 1: Initialize the structure as an empty grid with dimensions WxH.

```python
structure = [[' ']*W for _ in range(H)]
```

Step 2: Place the base of the structure using b11 blocks. We can cover the bottom layer with b11 blocks to ensure a solid base for the other blocks.

```python
for i in range(W):
    ab_drop('b11', i)
```

Step 3: Place the vertical part of the "R" using b13 blocks. We can place two b13 blocks vertically on top of the base, leaving a gap in the middle.

```python
ab_drop('b13', 0)  # Drop first b13 block on the leftmost slot
ab_drop('b13', W-1)  # Drop second b13 block on the rightmost slot
```

Step 4: Place the horizontal part of the "R" using b31 blocks. We can drop two b31 blocks horizontally to connect the vertical part of the "R". The first block should be dropped slightly above the base to ensure stability.

```python
ab_drop('b31', 2)  # Drop first b31 block on the third slot from the left
ab_drop('b31', W-3)  # Drop second b31 block on the third slot from the right
```

Step 5: Check for stability and adjust the structure if needed. If any blocks are not stable (overhangs, not placed as low as possible, or separated structure), we may have to modify the placement of the blocks. We need to ensure that all blocks are properly supported and the structure is stable.

Step 6: Lastly, display the final structure.

```python
for row in structure:
    print(''.join(row))
```

This code will generate a new structure resembling the character "R" while meeting all the given requirements. You can further optimize and adjust the placement of the blocks to improve stability and meet the constraints.