To generate the letter "A" using the available props and the ab_drop() function while satisfying the important notes, we can follow the following steps:

Step 1: Initialize the field by creating an empty 20x16 matrix.
```
field = [[' ' for _ in range(20)] for _ in range(16)]
```

Step 2: Place the base of the "A" by dropping a b31 brick with x_position = 8.
```
ab_drop('b31', 8)
```
This will occupy cells (7, 0), (8, 0), and (9, 0) on the ground.

Step 3: Stack two b11 bricks vertically on top of the base.
```
ab_drop('b11', 8)
ab_drop('b11', 9)
```
This will occupy cells (8, 1) and (9, 1) above the base.

Step 4: Place the top of the "A" by dropping a b13 brick with x_position = 7.
```
ab_drop('b13', 7)
```
This will occupy cells (7, 2), (7, 3), and (7, 4) above the b11 bricks.

Step 5: Verify stability and avoid boundary collisions by checking the structure.

Final code:
```python
field = [[' ' for _ in range(20)] for _ in range(16)]

ab_drop('b31', 8)
ab_drop('b11', 8)
ab_drop('b11', 9)
ab_drop('b13', 7)

print('\n'.join([''.join(row) for row in field]))
```

The resulting structure will resemble the letter "A" with stability and without boundary collisions.