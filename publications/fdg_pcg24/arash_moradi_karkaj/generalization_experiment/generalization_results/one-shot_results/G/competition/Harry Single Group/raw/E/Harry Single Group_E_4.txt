```python
def ab_drop(x, y):
    if x == 'b13':
        if y < 0 or y > 19:
            return
        for i in range(3):
            if field[y+i][y] == 1:
                y -= 1
                break
        for i in range(3):
            if y+i >= 16:
                break
            field[y+i][y] = 1
    elif x == 'b31':
        if y < 0 or y > 17:
            return
        for i in range(3):
            if field[y+2][y+i] == 1:
                y -= 1
                break
        for i in range(3):
            if y+i >= 18:
                break
            field[y+2][y+i] = 1

# Initialize the field
field = [[0 for _ in range(20)] for _ in range(16)]

# Generate the 'E' structure
ab_drop('b13', 5)  # Create the vertical line of the 'E'
ab_drop('b11', 4)  # Create the left horizontal line of the 'E'
ab_drop('b11', 6)  # Create the right horizontal line of the 'E'
ab_drop('b11', 7)  # Create the bottom horizontal line of the 'E'

# Display the generated 'E' structure
for row in field:
    print(row)
```

The code above generates the required 'E' structure using the `ab_drop()` function. The function is defined to handle the placement of both brick types, 'b13' and 'b31'. It checks the boundaries of the field and the presence of any previously placed bricks to ensure stability and avoid collisions. The generated structure is then displayed by printing the contents of the field.