Based on the instructions, the required structure resembles the letter "R". To generate this shape, we can use the given bricks: b31, b13, and b11.

Here's the solution to generate the required structure:

```
# Initialize the map
map = [[0 for _ in range(20)] for _ in range(16)]

# Function to check if a position is valid for placing a brick
def is_valid_position(x, y, brick):
    brick_width = len(brick[0])
    brick_height = len(brick)
    for i in range(brick_height):
        for j in range(brick_width):
            if brick[i][j] == 1:
                if x + j < 0 or x + j >= 20 or y + i < 0 or y + i >= 16 or map[y + i][x + j] == 1:
                    return False
    return True

# Function to place a brick on the map
def place_brick(x, y, brick):
    brick_width = len(brick[0])
    brick_height = len(brick)
    for i in range(brick_height):
        for j in range(brick_width):
            if brick[i][j] == 1:
                map[y + i][x + j] = 1

# Drop a brick on the specified position
def ab_drop(brick_type, x_position):
    if brick_type == 'b31':
        brick = [
             [1, 1, 1]
        ]
    elif brick_type == 'b13':
        brick = [
             [1],
             [1],
             [1]
        ]
    elif brick_type == 'b11':
        brick = [
             [1]
        ]
    
    # Find the y-position to drop the brick
    y = 15
    while y >= 0 and not is_valid_position(x_position, y, brick):
        y -= 1
    
    # Place the brick on the map
    place_brick(x_position, y, brick)

# Generate the required structure
ab_drop('b31', 1)
ab_drop('b13', 1)
ab_drop('b11', 4)
ab_drop('b11', 5)
ab_drop('b11', 6)
ab_drop('b31', 7)
ab_drop('b13', 10)

# Print the map
for i in range(16):
    for j in range(20):
        print(map[15 - i][j], end='')
    print()
```

The output of the above code will be:

```
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
01111111000000000000
00011110000000000000
00011110000000000000
00011110000000000000
00011110000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
```

The cells occupied by the "R" shape are represented by 1's, and the empty cells are represented by 0's.