The following is an example solution to generate the "Z" structure using the `ab_drop()` function and adhering to the given constraints:

```
# Map Initialization
structure = [[' ']*20 for _ in range(16)]

# Drop first block
ab_drop('b13', 9)

# Drop second block
ab_drop('b31', 10)

# Drop third block
ab_drop('b13', 8)

# Drop fourth block
ab_drop('b31', 10)

# Drop fifth block
ab_drop('b13', 7)

# Drop sixth block
ab_drop('b31', 9)

# Drop seventh block
ab_drop('b13', 6)

# Drop eighth block
ab_drop('b31', 8)

# Drop ninth block
ab_drop('b13', 5)

# Drop tenth block
ab_drop('b31', 7)

# Drop eleventh block
ab_drop('b13', 4)

# Drop twelfth block
ab_drop('b31', 6)

# Drop thirteenth block
ab_drop('b13', 3)

# Drop fourteenth block
ab_drop('b31', 5)

# Drop fifteenth block
ab_drop('b11', 4)

# Drop sixteenth block
ab_drop('b11', 5)

# Drop seventeenth block
ab_drop('b11', 6)

```

This solution starts building the "Z" structure from the bottom layer (layer 0) to the top layer (layer 15) in a sequential manner. The blocks are dropped in a specific order and at specific slots to achieve the desired shape. Gravity is taken into account to ensure that the blocks land on top of each other.

Please note that this is just one possible solution, and there may be other valid ways to generate the "Z" structure.