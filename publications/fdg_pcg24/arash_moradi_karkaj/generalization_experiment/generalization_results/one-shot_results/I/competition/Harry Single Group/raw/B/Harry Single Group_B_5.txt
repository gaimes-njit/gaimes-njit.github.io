To generate the shape resembling the letter "B" using the ab_drop(x, y) function and satisfy the important notes, we can follow these steps:

1. Initialize the field:
   - Create a 2D array representing the field with dimensions 16x20.
   - Initialize all cells of the field with zeros.

2. Place the first vertical brick (b13) on the ground:
   - Execute ab_drop('b13', 1) to place the b13 brick with an x_position of 1.
   - Update the field by marking the occupied cells with ones.

3. Place the horizontal brick (b31) above the vertical brick:
   - Execute ab_drop('b31', 2) to place the b31 brick with an x_position of 2.
   - Update the field by marking the occupied cells with ones.

4. Check stability and avoid boundary collisions:
   - Ensure that the bricks are stably stacked by checking the number of occupied cells on both sides of the pivot point.
   - Make sure that the occupied cells of the bricks do not exceed the boundaries of the field.

5. The generated field will represent the letter "B" shape.

Here is the code to generate the structure:

```python
# Step 1: Initialize the field
field = [[0]*20 for _ in range(16)]

# Step 2: Place the first vertical brick (b13) on the ground
ab_drop('b13', 1)

# Step 3: Place the horizontal brick (b31) above the vertical brick
ab_drop('b31', 2)

# Step 4: Check stability and avoid boundary collisions

# Check stability
if field[1][2] != 0: # If the pivot point is occupied
    field[1][1] = 0 # Remove the brick to restore stability

# Avoid boundary collisions
for i in range(3, 6): # Check the occupied cells of the b31 brick
    if i >= 20 or field[1][i] != 0: # If cell is out of bound or already occupied
        field[1][2] = 0 # Remove the brick to avoid boundary collision
        break
```

The resulting field will represent the shape resembling the letter "B".