In order to generate a stable structure that resembles the character "D" using the ab_drop() function, we need to consider the constraints and follow a step-by-step approach.

Step 1: Initialize the structure as an empty WxH grid.
```python
structure = [[' ']*W for _ in range(H)]
```

Step 2: Determine the dropping position and order for the blocks.
Based on the stability constraints, we can start by placing a b31 block on a solid base (b11 or b13 blocks) to prevent overhangs. To reduce the risk of collapsing, we should place the blocks as low as possible. Finally, we need to ensure that the structure is not separated.

Step 3: Create the structure that resembles the character "D".
To create the structure that resembles the character "D", we can start by placing a b13 block on the left side. Then, we can place two b31 blocks on top of the b13 block to form the vertical part of the "D" shape. Finally, we can place a b13 block on top of the two b31 blocks to complete the horizontal part of the "D" shape.

Step 4: Use the ab_drop() function to put suitable blocks to form the structure.
Based on the above steps, the Python code to generate the structure would look like this:
```python
ab_drop('b13', 0)  # Place a b13 block on the left side
ab_drop('b31', 0)  # Place a b31 block on top of the b13 block (left side)
ab_drop('b31', 2)  # Place a b31 block on top of the b13 block (right side)
ab_drop('b13', 1)  # Place a b13 block on top of the two b31 blocks
```

By executing the above code, the ab_drop() function will drop the blocks in the specified order and positions, resulting in a stable structure that resembles the character "D" while meeting all the hard constraints.