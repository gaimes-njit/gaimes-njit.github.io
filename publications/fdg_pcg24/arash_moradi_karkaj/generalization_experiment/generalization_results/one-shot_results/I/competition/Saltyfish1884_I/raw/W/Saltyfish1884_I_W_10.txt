To generate a structure that resembles the character "W" while meeting all hard constraints, we need to carefully plan the dropping positions and order of the blocks. Here's a step-by-step approach to achieve this:

1. Initialize the structure as an empty grid:
```python
structure = [[' ']*W for _ in range(H)]
```

2. Start by placing the first block, 'b31', in the middle slot:
```python
ab_drop('b31', 9)
```

3. Next, place the two 'b13' blocks on either side of the 'b31' block to form the middle part of the "W":
```python
ab_drop('b13', 8)
ab_drop('b13', 10)
```

4. Now, we need to create the top and bottom parts of the "W". Start by placing a 'b31' block above the left 'b13' block:
```python
ab_drop('b31', 8)
```

5. Place a 'b31' block above the right 'b13' block:
```python
ab_drop('b31', 10)
```

6. Place a 'b13' block below the left 'b13' block:
```python
ab_drop('b13', 8)
```

7. Place a 'b13' block below the right 'b13' block:
```python
ab_drop('b13', 10)
```

8. Finally, place a 'b31' block below the 'b31' block in the middle to complete the bottom part of the "W":
```python
ab_drop('b31', 9)
```

Now, the structure should resemble the character "W" and satisfy all hard constraints.

Note: The code provided above is just an example. You may need to adjust the dropping positions and order of the blocks based on your specific requirements or the size of your grid.