In order to generate a stable structure resembling the character "X" while satisfying all the given constraints, let's analyze the steps required:

1. Start by initializing the structure as an empty grid using the provided code:
```
structure = [[' ']*W for _ in range(H)]
```

2. Determine the dropping position and order of the blocks to create the structure. To achieve stability, we need to follow the stability rules:
    - Place the b31 block on the bottom layer (layer 0) and at a slot away from the left boundary (slot 1).
    - Place the b13 block on the same slot (slot 1) and vertically aligned with the center of the previous block.
    - Place the second b31 block on the bottom layer (layer 0) and at a slot away from the right boundary (slot W-2).
    - Place the b13 block on the same slot (slot W-2) and vertically aligned with the center of the previous block.

3. Use the ab_drop() function to drop the blocks in the determined positions and order. Here's an example of how the ab_drop() function would be used to generate a stable structure resembling the character "X":
```python
ab_drop('b31', 1)
ab_drop('b13', 1)
ab_drop('b31', W-2)
ab_drop('b13', W-2)
```

4. After executing the above code, the structure will resemble the character "X" and meet all the hard constraints of stability. You can print the final structure to visualize the result:
```python
for row in structure:
    print(' '.join(row))
```

Remember to replace the variable `W` with 20 and `H` with 16, as stated in the definitions section. Also, note that the provided code only demonstrates the usage of the ab_drop() function, and you need to generate a new result based on the given requirements.