To generate a stable structure that looks like the uppercase character "B" using the `ab_drop()` function, we can follow the steps below:

1. Initialize the structure as an empty WxH grid using the provided code:
   ```python
   structure = [[' ']*W for _ in range(H)]
   ```

2. Drop the first block (b31) centered at slot 9 using the `ab_drop()` function:
   ```python
   ab_drop('b31', 9)
   ```

   This drop will result in the following structure:
   ```
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
   0                                            b31
   1
   2
   3
   4
   5
   6
   7
   8
   9
   10
   11
   12
   13
   14
   15
   ```

3. Drop the second block (b13) centered at slot 9 using the `ab_drop()` function:
   ```python
   ab_drop('b13', 9)
   ```

   The drop will result in the following structure:
   ```
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
   0                                            b31
   1
   2
   3
   4
   5
   6
   7
   8
   9                  b13
   10                 b13
   11                 b13
   12
   13
   14
   15
   ```

4. Drop the third block (b11) centered at slot 9 using the `ab_drop()` function:
   ```python
   ab_drop('b11', 9)
   ```

   The drop will result in the following structure:
   ```
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
   0                                            b31
   1
   2
   3
   4
   5
   6
   7
   8
   9                  b13
   10                 b13
   11                 b13
   12         b11
   13
   14
   15
   ```

5. Drop the fourth block (b11) centered at slot 9 using the `ab_drop()` function:
   ```python
   ab_drop('b11', 9)
   ```

   The drop will result in the following structure:
   ```
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
   0                                            b31
   1
   2
   3
   4
   5
   6
   7
   8
   9                  b13
   10                 b13
   11                 b13
   12         b11
   13         b11
   14
   15
   ```

6. Drop the fifth block (b11) centered at slot 9 using the `ab_drop()` function:
   ```python
   ab_drop('b11', 9)
   ```

   The drop will result in the following structure:
   ```
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
   0                                            b31
   1
   2
   3
   4
   5
   6
   7
   8
   9                  b13
   10                 b13
   11                 b13
   12         b11
   13         b11
   14         b11
   15
   ```

By following these steps, we have generated a stable structure that looks like the uppercase character "B" using the `ab_drop()` function and satisfying all the hard constraints. Note that this is just one possible solution, and there may be other valid structures that meet the constraints.