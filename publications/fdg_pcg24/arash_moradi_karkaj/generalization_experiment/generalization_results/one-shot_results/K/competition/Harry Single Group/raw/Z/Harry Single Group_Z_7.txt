```
# Map Initialization
field = [[' ' for _ in range(20)] for _ in range(16)]
field[0] = ['-' for _ in range(20)]

def ab_drop(x, y):
    if x == 'b13':
        if y < 0 or y > 16: # Ensure y position is within boundaries
            return
        
        for i in range(3):
            if field[i][y] != ' ': # Check if any cell in current position is already occupied
                return
        
        # Drop the b13 brick from top to bottom
        for i in range(2, -1, -1):
            field[i][y] = 'b'
            
    elif x == 'b31':
        if y < 0 or y > 16 or y+2 > 19: # Ensure y position is within boundaries and there is enough space for the brick
            return
        
        for i in range(3):
            if field[0][y+i] != ' ' or field[1][y+i] != ' ' or field[2][y+i] != ' ': # Check if any cell in current position is already occupied
                return
        
        # Drop the b31 brick from top to bottom
        for i in range(3):
            field[i][y] = 'b'

# Generate the required structure
ab_drop('b13', 10)
ab_drop('b31', 11)
ab_drop('b13', 14)
ab_drop('b31', 15)

# Printing the generated structure
for i in range(16):
    for j in range(20):
        print(field[i][j], end=" ")
    print()
```