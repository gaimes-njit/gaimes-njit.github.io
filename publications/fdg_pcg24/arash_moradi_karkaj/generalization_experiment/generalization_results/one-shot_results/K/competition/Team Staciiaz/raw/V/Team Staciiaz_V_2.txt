To generate a stable structure that looks like the character "V" using the `ab_drop()` function and meet all the constraints, we need to carefully drop the blocks in a specific order and position.

Here's a step-by-step process to achieve that:

1. Create a function `generate_structure()` that utilizes `ab_drop()` function to stack the blocks and generate the structure. The function takes no arguments and returns the final structure.

2. Initialize the structure using the provided code:
```python
W = 20
H = 16
structure = [[' '] * W for _ in range(H)]
```

3. Start by dropping the base block (`b31`) at the center slot, which is slot number 9:
```python
ab_drop('b31', 9)
```
This will create a stable base for the structure.

4. Drop the left arm of the "V" using the vertical block (`b13`). The center slot should be at slot number 6:
```python
ab_drop('b13', 6)
```
This will create the left arm of the "V".

5. Drop the right arm of the "V" using another vertical block (`b13`). The center slot should be at slot number 12:
```python
ab_drop('b13', 12)
```
This will create the right arm of the "V".

6. Finally, drop the top center block (`b11`) to complete the structure. The center slot should be at slot number 9:
```python
ab_drop('b11', 9)
```
This will create the top part of the "V".

7. Return the final structure after all the blocks have been dropped:
```python
return structure
```

Here's the complete implementation of the `generate_structure()` function:

```python
def generate_structure():
    W = 20
    H = 16
    structure = [[' '] * W for _ in range(H)]

    ab_drop('b31', 9)
    ab_drop('b13', 6)
    ab_drop('b13', 12)
    ab_drop('b11', 9)

    return structure
```

Calling `generate_structure()` will give you the desired stable structure that looks like the character "V".