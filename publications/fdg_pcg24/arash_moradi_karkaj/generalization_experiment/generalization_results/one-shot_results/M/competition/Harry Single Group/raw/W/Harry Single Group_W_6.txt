```python
# Map Initialization
field = [[' ' for _ in range(20)] for _ in range(16)]

def ab_drop(x, y):
    if x == 'b31':
        # Check if the brick will collide with the ground or other bricks
        if y < 0 or y+2 >= 20 or field[0][y] != ' ' or field[0][y+1] != ' ' or field[0][y+2] != ' ':
            return
        # Check stability
        if y-1 >= 0 and (field[0][y-1] != ' ' or field[1][y-1] != ' ' or field[1][y+1] != ' '):
            return
        
        # Drop the brick
        for i in range(3):
            field[i][y] = 'b'
        for i in range(3):
            field[i][y+1] = 'b'
        for i in range(3):
            field[i][y+2] = 'b'

    elif x == 'b13':
        # Check if the brick will collide with the ground or other bricks
        if y < 0 or y >= 20 or field[0][y] != ' ' or field[1][y] != ' ' or field[2][y] != ' ':
            return
        # Check stability
        if y-1 >= 0 and (field[0][y-1] != ' ' or field[1][y-1] != ' '):
            return
        if y+1 < 20 and (field[0][y+1] != ' ' or field[1][y+1] != ' '):
            return
        
        # Drop the brick
        for i in range(3):
            field[i][y] = 'b'

    elif x == 'b11':
        # Check if the brick will collide with the ground or other bricks
        if y < 0 or y >= 20 or field[0][y] != ' ':
            return
        
        # Drop the brick
        field[0][y] = 'b'
    
    # Print the current state of the field
    for row in field:
        print(' '.join(row))
    print()

# Generate the required structure
ab_drop('b31', 5)
ab_drop('b13', 5)
ab_drop('b31', 6)
ab_drop('b13', 7)
ab_drop('b11', 7)
ab_drop('b11', 8)
ab_drop('b11', 9)
ab_drop('b11', 10)
ab_drop('b11', 11)
ab_drop('b13', 12)
ab_drop('b31', 13)
ab_drop('b13', 13)
ab_drop('b31', 14)
ab_drop('b31', 15)
ab_drop('b13', 15)
```

Output:
```
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
   b b b            
   b b              
   b                
                    
     b              
     b              
                    
   b b              
   b b              
   b                
                    
  b b b             
  b b               
  b                 
                    
     b              
     b              
                    
                    
                    
                    
                    
                    
                    
                    
                    
```