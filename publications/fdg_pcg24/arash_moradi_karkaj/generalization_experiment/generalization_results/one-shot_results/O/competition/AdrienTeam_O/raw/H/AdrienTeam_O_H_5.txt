To create a stable structure resembling "H" while satisfying the given constraints, you can use the following code:

```python
structure = [[' ']*20 for _ in range(16)]

# Bottom of H
ab_drop('b13', 8)
ab_drop('b13', 12)
ab_drop('b31', 10)

# Middle of H
ab_drop('b11', 8)
ab_drop('b11', 9)
ab_drop('b11', 10)
ab_drop('b11', 11)
ab_drop('b11', 12)

# Top of H
ab_drop('b11', 8)
ab_drop('b11', 12)
ab_drop('b31', 10)

# Rotate H horizontally
ab_drop('b11', 2)
ab_drop('b11', 3)
ab_drop('b11', 4)
ab_drop('b11', 15)
ab_drop('b11', 16)
ab_drop('b11', 17)

# Rotate H vertically
ab_drop('b11', 3)
ab_drop('b13', 1)
ab_drop('b13', 5)
ab_drop('b11', 2)
ab_drop('b13', 1)
ab_drop('b13', 5)
ab_drop('b11', 3)
ab_drop('b11', 7)
ab_drop('b11', 8)
ab_drop('b11', 9)
ab_drop('b11', 10)
ab_drop('b11', 11)
ab_drop('b11', 12)
ab_drop('b11', 13)
ab_drop('b11', 14)
ab_drop('b11', 15)
ab_drop('b11', 16)
ab_drop('b11', 17)
ab_drop('b11', 18)

# Move H to the desired position
ab_drop('b31', 5)
ab_drop('b31', 9)

# Remove excess blocks
ab_drop('b11', 0)
ab_drop('b11', 1)
ab_drop('b11', 18)
ab_drop('b11', 19)

# Final adjustments
ab_drop('b31', 5)
ab_drop('b31', 9)
ab_drop('b31', 5)
ab_drop('b31', 9)
ab_drop('b31', 5)
ab_drop('b31', 9)
```

This code creates the structure of "H" by dropping blocks in the appropriate positions. The blocks are dropped one by one from the bottom layer to the top layer, following the given constraints. The structure is then adjusted and rotated to create a stable and proportional shape resembling "H".