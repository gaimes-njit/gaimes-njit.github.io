To form the letter "K" shape in the field, we can follow these steps:

1. Initialize the field with empty cells: create a 2D list or array with dimensions 16x20 and fill it with 0s to represent empty cells.

```python
field = [[0] * 20 for _ in range(16)]
```

2. Place the first b11 brick at the bottom-left corner of the field (0, 0):

```python
ab_drop('b11', 0)
```

Now, the cell (0, 0) is occupied by the b11 brick.

3. Place the b31 brick vertically above the b11 brick, with its middle cell aligned with the b11 brick's middle cell (x_position = 0):

```python
ab_drop('b31', 1)
```

Now, the cells (0, 0), (0, 1), (0, 2), (1, 0), (1, 1), and (1, 2) are occupied by the b11 and b31 bricks.

4. Place the b13 brick horizontally above the b31 brick, with its middle cell aligned with the b31 brick's middle cell (x_position = 1):

```python
ab_drop('b13', 1)
```

Now, the cells (0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (1, 3), (2, 3), and (3, 3) are occupied by the b11, b31, and b13 bricks.

5. Place the b11 brick above the b13 brick, with its middle cell aligned with the b13 brick's middle cell (x_position = 2):

```python
ab_drop('b11', 2)
```

Now, the cells (0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (1, 3), (2, 3), (3, 3), (2, 4), and (2, 5) are occupied by the b11, b31, b13, and another b11 brick.

The final structure resembling the letter "K" will be:

```
01000000000000000000
01000000000000000000
01100000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
00000000000000000000
```

Please note that the above steps assume a hypothetical function `ab_drop()` that performs the desired operations. The actual implementation of `ab_drop()` may vary depending on the programming language or the Tetris-like game's specifications.