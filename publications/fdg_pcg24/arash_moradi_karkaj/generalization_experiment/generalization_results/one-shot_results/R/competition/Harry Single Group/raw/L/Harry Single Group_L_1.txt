Here is the code to generate the structure resembling the letter "L" while satisfying the important notes:

```python
# Map initialization
field = [['.' for _ in range(20)] for _ in range(16)]

# Function to check stability of the bricks
def is_stable():
    for y in range(15):
        for x in range(19):
            if field[y][x] != '.':
                if (field[y+1][x] == '.' and field[y+1][x+1] == '.') or (field[y+1][x] != '.' and field[y+1][x+1] != '.'):
                    return False
    return True

# Function to place bricks
def place_brick(brick, x_position):
    ab_drop(brick, x_position)
    if is_stable():
        return True
    else:
        ab_drop(brick, x_position + 1)
        if is_stable():
            return True
        else:
            ab_drop(brick, x_position - 1)
            if is_stable():
                return True
            else:
                return False

# Function to drop the brick onto the field
def ab_drop(x, y):
    if x == 'b31':
        for i in range(y-1, y+2):
            field[i][y-1] = '#'
    elif x == 'b13':
        for i in range(y-1, y+2):
            field[i][y-1] = '#'
    else:
        field[y][y-1] = '#'

# Place bricks to form the "L" shape
place_brick('b31', 5)
place_brick('b13', 5)

# Print the final structure
for row in field:
    print(' '.join(row))
```

The final structure will be displayed as follows:

```
. . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
. . . . . # # # . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
. . . . . . .