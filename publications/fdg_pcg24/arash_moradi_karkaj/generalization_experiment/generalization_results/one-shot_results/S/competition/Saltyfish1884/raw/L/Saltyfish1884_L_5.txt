To generate a stable structure resembling the character "L" while meeting all the hard constraints, we need to carefully plan the dropping position and order of the blocks. Here is a step-by-step approach:

1. Initialize the structure as an empty WxH grid: 
```python
structure = [[' ']*W for _ in range(H)]
```

2. Drop a b11 block at the bottom left corner of the structure to act as the base:
```python
ab_drop('b11', 0)
```
The structure will be stable with this block acting as the base.

3. Drop a b31 block on top of the base to form the vertical part of the "L":
```python
ab_drop('b31', 1)
```
This block should be dropped on the solid base to prevent overhangs.

4. Drop a b13 block on top of the vertical part to complete the "L" shape:
```python
ab_drop('b13', 1)
```

5. To satisfy stability constraint 3 (structure should not be separated), we can drop additional b11 blocks on top of the vertical part and the base:
```python
ab_drop('b11', 1)
ab_drop('b11', 0)
```

6. To meet stability constraint 2 (blocks should be placed as low as possible), we can drop another b11 block on top of the vertical part:
```python
ab_drop('b11', 1)
```

7. To satisfy stability constraint 1 (b31 block must be placed on a solid base), we can drop another b31 block on top of the vertical part:
```python
ab_drop('b31', 1)
```

8. Finally, to meet the no boundary intrusion constraint, we can add b11 blocks on the sides and top of the structure:
```python
for i in range(1, H - 1):
    ab_drop('b11', 0)
    ab_drop('b11', W - 1)
ab_drop('b11', 0)
ab_drop('b11', W - 1)
ab_drop('b11', 1)
ab_drop('b11', W - 2)
```

The resulting structure will resemble the character "L" and meet all the given constraints. Note that this is just one possible solution, and you can experiment with different block dropping positions and orders to achieve similar structures.