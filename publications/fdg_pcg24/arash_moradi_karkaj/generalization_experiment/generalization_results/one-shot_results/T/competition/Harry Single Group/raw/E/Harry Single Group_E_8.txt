To generate the shape resembling the letter "E" using the available props and the ab_drop() function, we can follow these steps:

1. Initialize the field by creating a 2D array with dimensions 20x16, representing the cells of the field. Set all cells to be empty initially.

2. Place the bottom bar of the "E" shape using the b31 brick. Execute the ab_drop('b31', 4) function to drop the b31 brick with an x_position of 4. This will occupy the cells (3, 0), (4, 0), and (5, 0).

3. Place the vertical bar of the "E" shape using the b13 brick. Execute the ab_drop('b13', 4) function to drop the b13 brick with an x_position of 4. This will occupy the cells (4, 1), (4, 2), and (4, 3).

4. Place the top bar of the "E" shape using the b31 brick. Execute the ab_drop('b31', 4) function again to drop the b31 brick with an x_position of 4. This will occupy the cells (3, 4), (4, 4), and (5, 4).

With these steps, we have formed a shape resembling the letter "E" on the field.

```
# Field initialization
field = [[' ' for _ in range(20)] for _ in range(16)]

# Function to print the field
def print_field():
    for row in field:
        print(' '.join(row))

# Function to check if a position is valid and within the field boundaries
def is_valid_position(x, y):
    return x >= 0 and x < 20 and y >= 0 and y < 16

# Function to check if a brick can be placed at a specific position
def can_place_brick(brick, x, y):
    for i in range(brick[1]):
        for j in range(brick[1]):
            if not is_valid_position(x+i, y+j) or field[y+j][x+i] != ' ':
                return False
    return True

# Function to place a brick at a specific position
def place_brick(brick, x, y):
    for i in range(brick[1]):
        for j in range(brick[1]):
            field[y+j][x+i] = brick[0]

# Function to drop a brick using the ab_drop() function
def ab_drop(brick_type, x_position):
    brick = None
    if brick_type == 'b31':
        brick = ('1', 3)
    elif brick_type == 'b13':
        brick = ('2', 3)
    elif brick_type == 'b11':
        brick = ('3', 1)
    else:
        return
    
    y = 15
    while y >= 0:
        if can_place_brick(brick, x_position, y):
            place_brick(brick, x_position, y)
            break
        y -= 1

# Generate the "E" shape
ab_drop('b31', 4)
ab_drop('b13', 4)
ab_drop('b31', 4)

# Print the resulting field
print_field()
```

This code will create the "E" shape on the field by placing the bricks accordingly while ensuring stability and avoiding boundary collisions. The resulting field will be displayed after generating the shape.