Based on the given instructions, we need to use the ab_drop(x, y) function to place bricks on the field and form a shape resembling the letter "F". Here is the solution:

```python
# Initialize the field with all cells unoccupied
field = [[0 for _ in range(20)] for _ in range(16)]

# Function to check stability of bricks
def check_stability():
    for y in range(15, 0, -1):
        for x in range(19):
            if field[y][x] != 0:
                # If a brick is found at (x, y)
                if field[y-1][x+1] == 0 and field[y][x+1] == 1 and field[y-1][x] == 0:
                    # Brick is unstable, move it to the left
                    field[y][x-1] = field[y][x]
                    field[y][x] = 0

# Function to drop a brick on the field
def ab_drop(x, y):
    brick = None
    if x == 'b31':
        brick = [[1, 1, 1]]
    elif x == 'b13':
        brick = [[1], [1], [1]]
    elif x == 'b11':
        brick = [[1]]
    
    x_position = y
    
    # Check if brick exceeds field boundaries
    if x_position + len(brick[0]) > 20:
        return
    
    # Start dropping the brick
    for i in range(len(brick)):
        for j in range(len(brick[i])):
            # Check if current cell is already occupied
            if field[i][x_position+j] != 0:
                # Brick stops above occupied cell
                return
            # Occupy current cell with brick
            field[i][x_position+j] = brick[i][j]
    
    # Check stability after placing the brick
    check_stability()

# Place bricks to form "F" shape
ab_drop('b31', 5)
ab_drop('b13', 5)
ab_drop('b31', 6)

# Print the resulting field
for row in field:
    print(row)
```

The above code initializes the field, defines the check_stability() function to ensure stability of bricks, and defines the ab_drop() function to drop bricks on the field. Lastly, it uses the ab_drop() function to place the bricks in the required pattern to form the letter "F". The resulting field is then printed.