Here's the code to generate the required structure resembling the letter "K":

```python
# Map Initialization
field = [[0 for _ in range(20)] for _ in range(16)]

# Helper function to check if a cell is occupied by a brick
def is_occupied(x, y):
    return field[y][x] == 1

# Helper function to place a brick on the field
def place_brick(x, y, brick):
    for i in range(brick[1]):
        for j in range(brick[0]):
            field[y+i][x+j] = 1

# Function to drop a brick on the field and handle stability
def ab_drop(x, y):
    if x == 'b31':
        brick = (3, 1)
    elif x == 'b13':
        brick = (1, 3)
    elif x == 'b11':
        brick = (1, 1)
    
    # Calculate the initial position of the brick
    x_position = y - brick[0]//2

    # Check for boundary collisions
    if x_position < 0 or x_position + brick[0] > 20:
        return
    
    # Check if any cells in the current position of the brick are occupied
    for i in range(brick[1]):
        for j in range(brick[0]):
            if is_occupied(x_position+j, i):
                return
    
    # Place the brick on the field
    place_brick(x_position, brick[1]-1, brick)

# Generate the letter "K"
ab_drop('b13', 5)  # Place b13 brick at x_position 5
ab_drop('b31', 6)  # Place b31 brick at x_position 6

# Display the field
for row in field:
    print(row)
```

The output will be:

```
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 1,