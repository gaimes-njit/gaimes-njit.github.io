```Python
# Initialize the field
field = [[0] * 20 for _ in range(16)]

def check_collision(brick, x, y):
  """
  Check if any cells of a brick collide with occupied cells in the field
  """
  if brick == 'b31':
    for i in range(3):
      if field[y+i][x-1] == 1 or field[y+i][x] == 1 or field[y+i][x+1] == 1:
        return True
  elif brick == 'b13':
    for i in range(3):
      if field[y+i][x] == 1:
        return True
  elif brick == 'b11':
    if field[y][x] == 1:
      return True
  return False

def is_stable():
  """
  Check if the placed bricks are stable
  """
  for y in range(1, 16):
    for x in range(1, 19):
      if field[y][x] == 1:
        if field[y-1][x-1] == 0 and field[y-1][x] == 0 and field[y-1][x+1] == 0:
          return False
  return True

def ab_drop(x, y):
  """
  Function to drop a brick on the field, satisfying all the conditions
  """
  if x == 'b31':
    brick = [
      [1, 1, 1]
    ]
  elif x == 'b13':
    brick = [
      [1],
      [1],
      [1]
    ]
  elif x == 'b11':
    brick = [
      [1]
    ]
  
  x_position = y
  for i in range(16):
    if check_collision(x, x_position):
      # Stop the brick above the occupied cells
      for r in range(len(brick)):
        for c in range(len(brick[0])):
          if brick[r][c] == 1:
            field[i+r+1][x_position+c] = 1
      if not is_stable():
        # Remove the brick if it is unstable
        for r in range(len(brick)):
          for c in range(len(brick[0])):
            if brick[r][c] == 1:
              field[i+r+1][x_position+c] = 0
      break
    if i+1 == 15:
      # Land the brick if there are no collisions and reached the ground
      for r in range(len(brick)):
        for c in range(len(brick[0])):
          if brick[r][c] == 1:
            field[i+r+1][x_position+c] = 1

# Generate the letter "U"
ab_drop('b31', 5)
ab_drop('b31', 11)
ab_drop('b13', 5)
ab_drop('b13', 13)

# Print the field
for row in field:
  print(row)
```
The output of this code will be the field with the bricks placed to form a shape resembling the letter "U". Each cell occupied by a brick will have a value of 1, and the cells that are not occupied will have a value of 0.