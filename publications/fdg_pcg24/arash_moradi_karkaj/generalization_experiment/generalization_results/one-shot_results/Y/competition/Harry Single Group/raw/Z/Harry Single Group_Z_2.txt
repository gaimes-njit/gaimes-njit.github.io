To generate the structure resembling the letter "Z" using the available props and the ab_drop() function, we can follow the steps below:

1. Initialize the field to represent an empty grid with the dimensions 20x16. This can be done using a 2D array or a similar data structure.

```
field = [[0] * 20 for _ in range(16)]
```

2. Place the first brick 'b13' vertically at x_position = 9 to form the vertical line of the "Z". We can use the ab_drop() function to drop the brick from the top of the field.

```
ab_drop('b13', 9)
```

After executing this, the cells (9, 0), (9, 1), and (9, 2) will be occupied.

3. Place the second brick 'b31' horizontally at x_position = 6 to form the top horizontal line of the "Z". Again, we can use the ab_drop() function to drop the brick onto the field.

```
ab_drop('b31', 6)
```

After executing this, the cells (6, 3), (7, 3), and (8, 3) will be occupied.

4. Ensure stability by checking the stability condition for the two bricks. Since the "Z" shape is stable by design, we don't need to make any changes.

To avoid boundary collisions, we can add boundary condition checks before executing the ab_drop() function. That way, we ensure the occupied cells of the brick do not exceed the boundaries of the field.

Here's the code sequence to generate the structure:

```python
field = [[0] * 20 for _ in range(16)]

# Place the first vertical brick
ab_drop('b13', 9)

# Place the second horizontal brick
ab_drop('b31', 6)
```

This will generate the required structure resembling the letter "Z" while including the important notes for stability and boundary collisions.