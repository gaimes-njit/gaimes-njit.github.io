To generate the letter "E" using the available props and function ab_drop(x, y), we need to carefully plan our placement strategy to ensure stability and avoid boundary collisions. Here's the code to generate the "E" shape:

```python
# Map initialization
map = [[0 for _ in range(20)] for _ in range(16)]

# Drop the first vertical line of the "E" shape
ab_drop('b13', 5)
ab_drop('b31', 6)

# Drop the horizontal line of the "E" shape
ab_drop('b11', 5)
ab_drop('b11', 6)
ab_drop('b11', 7)

# Drop the second vertical line of the "E" shape
ab_drop('b13', 8)

# Output the generated map
for row in map:
    print(row)
```

In this code, we first initialize the map as a 2-dimensional list of zeros with dimensions 16x20. Each element in the map represents a cell in the field.

Next, we drop the first vertical line of the "E" shape using the ab_drop('b13', 5) function. This places a vertical rectangular brick of width 1 and height 3 starting from x_position 5. The occupied cells are (5, 0), (5, 1), and (5, 2).

Then, we drop a horizontal line of bricks using the ab_drop('b31', 6) function. This places a horizontal rectangular brick of width 3 and height 1 starting from x_position 6. The occupied cells are (5, 3), (6, 3), and (7, 3).

Next, we drop three vertical bricks of width 1 and height 1 using the ab_drop('b11', x) function. This places a square brick starting from x_position 5, 6, and 7. The occupied cells are (5, 4), (6, 4), and (7, 4).

Finally, we drop the second vertical line of the "E" shape using the ab_drop('b13', 8) function. This places a vertical rectangular brick of width 1 and height 3 starting from x_position 8. The occupied cells are (8, 0), (8, 1), and (8, 2).

The resulting map will resemble the letter "E" with the correct stability and no boundary collisions.