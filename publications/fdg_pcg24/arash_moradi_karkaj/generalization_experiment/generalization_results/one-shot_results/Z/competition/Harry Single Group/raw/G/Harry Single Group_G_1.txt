One possible solution to form the shape resembling the letter "G" using the given props and function is as follows:

```python
# map initialization
map = [[0]*20 for _ in range(16)]

# helper function to check stability
def check_stability():
    for y in range(16):
        for x in range(20):
            if map[y][x] > 0:
                # check bricks stacked vertically
                if y+1 < 16 and map[y+1][x] > 0:
                    left_count = 0
                    right_count = 0
                    for i in range(y+2, 16):
                        if x-1 >= 0 and map[i][x-1] > 0:
                            left_count += 1
                        if x+1 < 20 and map[i][x+1] > 0:
                            right_count += 1
                    if left_count != right_count:
                        return False
    return True

# function to drop a b31 brick
def drop_b31(x_position):
    for y in range(16):
        if y+1 < 16 and map[y+1][x_position-1] > 0:
            break
        if y+1 < 16 and map[y+1][x_position] > 0:
            break
        if y+1 < 16 and map[y+1][x_position+1] > 0:
            break
        if y == 15:
            map[y][x_position-1] = 3
            map[y][x_position] = 3
            map[y][x_position+1] = 3

# function to drop a b13 brick
def drop_b13(x_position):
    for y in range(16):
        if y+2 < 16 and (map[y+2][x_position] > 0 or map[y+2][x_position+1] > 0 or map[y+2][x_position+2] > 0):
            break
        if y == 15:
            map[y][x_position] = 2
            map[y-1][x_position] = 2
            map[y-2][x_position] = 2

# function to drop a b11 brick
def drop_b11(x_position):
    y = 0
    while y < 16 and map[y][x_position] == 0:
        y += 1
    if y > 0:
        map[y-1][x_position] = 1

# generating the structure
drop_b13(5)
drop_b31(6)
drop_b11(5)
drop_b11(7)
drop_b11(8)
drop_b11(9)
drop_b11(10)
drop_b11(11)
drop_b11(12)
drop_b11(13)
drop_b11(14)
drop_b13(15)
drop_b31(16)

# printing the resulting map
for row in map:
    print(row)
```

This will output:

```
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 