To form a shape resembling the letter "O", we will need to use a combination of b31 and b13 bricks. 

Here is the code to generate the structure:

```python
# Map initialization
map = [[0 for _ in range(20)] for _ in range(16)]

# Function to check stability
def is_stable(brick):
    for i in range(brick[0]):
        if sum(brick[1][i:]) != sum(brick[1][:i]):
            return False
    return True

# Function to check boundary collision
def is_within_boundaries(brick, x_position):
    return x_position >= 0 and x_position + brick[0] <= 19

# Function to place a brick
def place_brick(brick, x_position):
    for i in range(brick[0]):
        map[0][x_position+i] = 1

# Function to drop the brick
def ab_drop(x, y):
    if x == 'b31':
        brick = (3, [1, 1, 1])
        if is_within_boundaries(brick, y) and is_stable(brick):
            place_brick(brick, y)
    elif x == 'b13':
        brick = (3, [1, 1, 1])
        if is_within_boundaries(brick, y) and is_stable(brick):
            place_brick(brick, y)

# Generate the required structure
ab_drop('b31', 4)
ab_drop('b31', 6)
ab_drop('b31', 8)
ab_drop('b13', 3)
ab_drop('b13', 9)
ab_drop('b13', 3)
ab_drop('b13', 9)
ab_drop('b13', 3)
ab_drop('b31', 4)
ab_drop('b31', 6)
ab_drop('b31', 8)

# Print the generated structure
for row in reversed(map):
    print(row)
```

The output will be:

```
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 