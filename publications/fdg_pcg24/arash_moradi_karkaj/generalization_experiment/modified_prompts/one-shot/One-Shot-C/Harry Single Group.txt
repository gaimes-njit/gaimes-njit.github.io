Let's play Tetris-like game: Using only the function ab_drop(x, y) to place bricks on a specified field to form a shape resembling the letter <OBJECT>.1. Available Props:b31: A horizontal rectangular brick with a width of 3 and a height of 1, occupying 3 cells.b13: A vertical rectangular brick with a width of 1 and a height of 3, occupying 3 cells.b11: A square brick with a length and width of 1, occupying 1 cell.2. Definitions:Field: The field has a width of 20 and a width of 16, consisting of a total of 320 cells. If we imagine it on a coordinate axis, the x-axis ranges from 0 to 19, and the y-axis ranges from 0 to 15. (0, 0) represents the bottom-left cell, and (19, 15) represents the top-right cell.Ground: Refers to all cells located on the y-axis = 0.x_position: A parameter representing the x-axis position of the currently generated brick. For a b31 brick, it corresponds to the x-axis position of the middle cell of the brick. For example, if a b31 brick is generated on the ground with an x_position of 5, then the cells (4, 0), (5, 0), and (6, 0) will be occupied by this brick.3. Available Function:ab_drop(x, y): x represents the type of brick, and y represents the x_position. This function generates a brick of type x starting from the position x_position = y and drops it from the top of the field towards the ground, with the y-axis decreasing. During the descent, it continuously checks if at least one cell in the current position of the brick is already occupied by previously placed bricks. If so, the current brick stops above the occupied cell. If no occupied cell is detected throughout the process, the current brick will finally land on the ground. For example, after executing ab_drop('b13', 5), the cells (5, 0), (5, 1), and (5, 2) will be occupied. Then, after executing ab_drop('b31', 6), the cells (5, 3), (6, 3), and (7, 3) will be occupied by the current b31 brick.4. Important Notes:4.1 Stability: Assume that gravity exists in this field. We need to ensure that the placed bricks remain stable. For example, when observing two bricks stacked together vertically, with the point of contact serving as the pivot, if the number of occupied cells on the left and right sides of the pivot differs for the upper brick, the structure is unstable.4.2 Avoiding Boundary Collisions: When placing bricks, always ensure that the occupied cells of the brick do not exceed the boundaries of the field.4.3 Format: Don’t forget to do map initialization first, you can do analysis, but remember that the code that only contains ab_drop() function should be separated from analysis and these codes should be between the last 2 pairs of three backticks(```).Now start to generate the required structure and don’t forget to satisfy the important notes.